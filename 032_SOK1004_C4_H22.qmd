# Instruksjoner

Denne oppgaven skal løses interaktivt i RStudio ved å legge inn egen kode og kommentarer.
Det ferdige dokumentet lagres med kandidatnummeret som navn `[kandidatnummer]_SOK1004_C4_H22.qmd` og lastes opp på deres GitHub-side.
Hvis du har kandidatnummer 43, så vil filen hete `43_SOK1004_C4_H22.qmd`.
Påse at koden kjører og at dere kan eksportere besvarelsen til pdf.
Lever så lenken til GitHub-repositoriumet i Canvas.

# Bakgrunn, læringsmål

Innovasjon er en kilde til økonomisk vekst.
I denne oppgaven skal vi se undersøke hva som kjennetegner bedriftene som bruker ressurser på forskning og utvikling (FoU).
Dere vil undersøke FoU-kostnader i bedriftene fordelt på næring, antall ansatte, og utgiftskategori.
Gjennom arbeidet vil dere repetere på innhold fra tidligere oppgaver og øve på å presentere fordelinger av data med flere nivå av kategoriske egenskaper.

# Last inn pakker

```{r}
# output | false
#rm(list=ls()) 
library(tidyverse)
library(rjstat)
library(gdata)
library(httr)
```

# Oppgave I: Introduksjon til histogram

Et histogram eller frekvensfordeling er en figur som viser hvor ofte forskjellige verdier oppstår i et datasett.
Frekvensfordelinger spiller en grunnleggende rolle i statistisk teori og modeller.
Det er avgjørende å forstå de godt.
En kort innføring følger.

La oss se på et eksempel.
I datasettet `mtcars` viser variabelen `cyl` antall sylindere i motorene til kjøretøyene i utvalget.

```{r}
data(mtcars)
mtcars %>%
  ggplot(aes(cyl)) +
  geom_histogram() +
  theme_minimal()
```

Verdiene av variabelen er er gitt ved den horisontale aksen, antall observasjoner på den vertikale aksen.
Vi ser at det er 11, 7, og 14 biler med henholdsvis 4, 6, og 8 sylindere.

La oss betrakte et eksempel til.
Variabelen `mpg` i `mtcars` måler gjennomsnittlig drivstoffforbruk i uanstendige engelske enheter.
Variabelen er målt med ett desimal i presisjon.

```{r}
data(mtcars)
mtcars %>%
  ggplot(aes(mpg)) +
  geom_histogram(binwidth=0.1) +
  theme_minimal()
```

Datasettet inneholder mange unike verdier, hvilket gir utslag i et flatt histogram, noe som er lite informativt.
Løsningen da er å gruppere verdier som ligger i nærheten av hverandre.
Kommandoen Kommandoen `binwidth` i `geom_histogram()` bestemmer bredden av intervallene som blir slått sammen.
Kan du forklare hvorfor alle unike verdier blir telt ved å å bruke `binwidth = 0.1?`

Eksperimenter med forskjellige verdier for `binwidth` og forklar hva som kjennetegner en god verdi.

```{r}
# løs oppgave I her
data(mtcars)
mtcars %>%
  ggplot(aes(mpg)) +
  geom_histogram(binwidth=1) +
  theme_minimal()
```

#### Hvorfor blir alle unike verdier telt ved å bruke \`binwidth = 0.1'?

*Dette er fordi dataene i mtcars er representert ved ett desimals presisjon og 'bindwith = 0.1' grupperer verdier med ett desimal i presisjon.*

*Velger man binwith med lavere presisjon så vil r gruppere vediene sammen, og å velge en høyere presisjon enn representert i dataene(f.eks. data er 0.01, men man prøver seg på binwidth = 0.001) har lite for seg da det bare gjør det vanskeligere å se dataene som faktisk er der.*

#### Hva kjennetegner en god binwidth verdi?

*En god binwidth verdi vil representere hele datasettet på en slik måte at også ekstreme verdier blir tatt med. Frekvensgrafen vil vise "helningen" til spredningen på en oversiktelig måte.*

# Oppgave II: Last ned og rydd i data

Vi skal nå undersøkene dataene i [Tabell 07967: Kostnader til egenutført FoU-aktivitet i næringslivet, etter næring (SN2007) og sysselsettingsgruppe (mill. kr) 2007 - 2020 SSB](https://www.ssb.no/statbank/table/07967).
Dere skal laster de ned ved hjelp av API.
Se [brukerveiledningen](https://www.ssb.no/api/pxwebapi/_/attachment/inline/019c05e0-35ad-4757-87a0-ba7fbf4a68e2:46a164479bc10a67eee4b472cd891f001ca19da5/Api_brukerveiledning.pdf) her.

Bruk en JSON-spørring til å laste ned alle statistikkvariable for alle år, næringer, og sysselsettingsgrupper med 10-19, 20-49, 50-99, 100-199, 200 - 499, og 500 eller flere ansatte.
Lagre FoU-kostnader i milliarder kroner.
Sørg for at alle variabler har riktig format, og gi de gjerne enklere navn og verdier der det passer.

**Hint.** Bruk lenken til SSB for å hente riktig JSON-spørring og tilpass koden fra case 3.

```{r}
rm(list=ls()) 
library(tidyverse)
library(lubridate)
library(rjstat)
library(janitor)
library(gdata)
library(httr) 
library(ggplot2)
library(dplyr)
```

```{r}
url <- "https://data.ssb.no/api/v0/no/table/07967/"

query <- '{
  "query": [
    {
      "code": "NACE2007",
      "selection": {
        "filter": "item",
        "values": [
          "A-N",
          "C",
          "G-N",
          "A-B_D-F"
        ]
      }
    },
    {
      "code": "SyssGrp",
      "selection": {
        "filter": "item",
        "values": [
          "10-19",
          "20-49",
          "10-49",
          "50-99",
          "100-199",
          "200-499",
          "500+"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'

hent_indeks.tmp <- url %>%
  POST(body = query, encode = "json")

df <-  hent_indeks.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()
```

# Oppgave III: Undersøk fordelingen

Vi begrenser analysen til bedrifter med minst 20 ansatte og tall fra 2015 - 2020.
Lag en figur som illustrerer fordelingen av totale FoU-kostnader fordelt på type næring (industri, tjenesteyting, andre) og antall ansatte i bedriften (20-49, 50-99, 100-199, 200-499, 500 og over).
Tidsdimensjonen er ikke vesentlig, så bruk gjerne histogram.

**Merknad.** Utfordringen med denne oppgaven er at fordelingene er betinget på verdien av to variable.
Kommandoen `facet_grid()` kan være nyttig til å slå sammen flere figurer på en ryddig måte.

```{r}
#endrer navn på kolonnene
colnames(df) <- c("industri", "sysselsatte", "kostnader", "år", "value")
#endrer millioner til milliarder
df <- df %>% 
  mutate(value = value / 1000)
```

```{r}

df %>%
  #filtrerer
  filter(kostnader == "FoU-kostnader i alt",
         industri != "Alle næringer", 
         sysselsatte != c("10-19 sysselsatte"),
         sysselsatte != "10-49 sysselsatte",
         år %in% c(2015:2020)) %>% 
  
  ggplot(aes(x=value)) +
  #lager en graf hvor verdiene fordeles på både kostnad og type industri
  geom_histogram(aes(fill=industri),
                 alpha = 0.7,
                 position = "dodge",
                 bins = 5) +
  #lager en grid etter de forskjellige kategoriene av antall ansatte, skriver manuelt inn rekkefølge da de ikke automatisk var stigende
  facet_grid(~factor(sysselsatte, 
                     levels=c('20-49 sysselsatte',
                              '50-99 sysselsatte',
                              '100-199 sysselsatte',
                              '200-499 sysselsatte',
                              '500 sysselsatte og over')))+ 
  
  theme_ipsum() +
  #gir riktig navn på legenden
  labs(fill = "Næring")+
  #gjør tittel/tekststørrelsen noe mindre og separerer grafene
  theme(legend.position="bottom",
          panel.spacing = unit(0.5,
                               "lines"),
          strip.text.x = element_text(size = 8),
          plot.title = element_text(size = 10)) +
  #Tittel
  ggtitle("Fordeling av totale FoU-kostnader, etter antall ansatte og type næring")+
  #navn på x-akse
  xlab("FoU-kostnad i mrd.kr") +
  #navn på y-akse
  ylab("Antall")
```

# Oppgave IV: Undersøk fordelingen igjen

Kan du modifisere koden fra oppgave II til å i tillegg illustrere fordelingen av FoU-bruken på lønn, innleie av personale, investering, og andre kostnader?

**Merknad.** Kommandoen `fill = [statistikkvariabel]` kan brukes i et histogram.

```{r}
  df %>%
  #filtrerer 
  filter(kostnader != "FoU-kostnader i alt",
         kostnader != "FoU-driftskostnader i alt",
         industri != "Alle næringer", 
         sysselsatte != "10-19 sysselsatte",
         sysselsatte != "10-49 sysselsatte",
         år %in% c(2015:2020)) %>% 
  
  ggplot(aes(x=value)) +
  # Drnsity gjør at den fordeler på andel i stedet for antall
  geom_histogram(aes(fill=kostnader,
                     y = ..density..),
                 alpha = 0.7,
                 bins = 5) +

  

  #lager en grid med industri og sysselsatte i hver del
  facet_grid(industri ~ factor(sysselsatte, 
                     levels=c('20-49 sysselsatte',
                              '50-99 sysselsatte',
                              '100-199 sysselsatte',
                              '200-499 sysselsatte',
                              '500 sysselsatte og over')))+ 
    
    theme_ipsum() +
    #Fjerner tittel på legend
    labs(fill = "")+
    #måtte gjøre teksten i legend noe mindre for at den skal passe
    theme(legend.position="bottom",
          panel.spacing = unit(0.5,
                               "lines"),
          strip.text = element_text(size = 8),
          plot.title = element_text(size = 10),
          legend.text=element_text(size=8)) +
  
    ggtitle("Fordeling av tFoU-bruken på lønn, innleie av personale, investering, og andre kostnader, \netter antall ansatte og type næring")+
  
  xlab("FoU-kostnad i mrd.kr") +
  
  ylab("Andel")
```
